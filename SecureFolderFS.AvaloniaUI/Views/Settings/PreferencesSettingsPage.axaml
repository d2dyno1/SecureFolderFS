<uc:Page
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="using:SecureFolderFS.AvaloniaUI.UserControls"
    xmlns:ts="using:SecureFolderFS.AvaloniaUI.TemplateSelectors"
    xmlns:uc2="using:SecureFolderFS.UI.UserControls.InfoBars"
    xmlns:vc="using:SecureFolderFS.AvaloniaUI.ValueConverters"
    xmlns:vm="using:SecureFolderFS.Sdk.ViewModels.Settings.Banners"
    xmlns:vm2="using:SecureFolderFS.Sdk.ViewModels.Controls"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    xmlns:ic="using:FluentAvalonia.FluentIcons"
    Loaded="PreferencesSettingsPage_OnLoaded"
    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
    x:Class="SecureFolderFS.AvaloniaUI.Views.Settings.PreferencesSettingsPage">

    <uc:Page.Resources>
        <vc:GenericEnumConverter x:Key="GenericEnumConverter" />

        <DataTemplate x:Key="DokanyUnavailableInfoBarTemplate" x:DataType="uc2:DokanyInfoBar">
            <ui:InfoBar
                IsClosable="{Binding CanBeClosed}"
                IsOpen="True"
                Message="{Binding Message}"
                Severity="{Binding InfoBarSeverity, Converter={StaticResource GenericEnumConverter}}">

                <Border Padding="16,8,16,8">
                    <ui:HyperlinkButton
                        Margin="0,-16,0,0"
                        HorizontalAlignment="Right"
                        Command="{Binding OpenWebsiteCommand}"
                        Content="Open website" />
                </Border>
            </ui:InfoBar>
        </DataTemplate>
        <DataTemplate x:Key="GenericInfoBarTemplate" x:DataType="vm2:InfoBarViewModel">
            <ui:InfoBar
                IsClosable="{Binding CanBeClosed}"
                IsOpen="True"
                Message="{Binding Message}"
                Severity="{Binding InfoBarSeverity, Converter={StaticResource GenericEnumConverter}}" />
        </DataTemplate>
    </uc:Page.Resources>

    <Border Padding="16,16,16,8">
        <Grid
            x:Name="RootGrid"
            Loaded="RootGrid_Loaded"
            RowDefinitions="Auto,12,*">

            <!--  Banner  -->
            <uc:BannerControl>
                <uc:BannerControl.LeftSide>
                    <StackPanel Spacing="2">
                        <TextBlock
                            FontSize="21"
                            FontWeight="SemiBold"
                            Text="File system provider" />
                        <TextBlock
                            FontSize="11"
                            Opacity="0.8"
                            Text="Choose preferred virtual file system type" />
                    </StackPanel>
                </uc:BannerControl.LeftSide>
                <uc:BannerControl.RightSide>
                    <ComboBox
                        x:Name="FileSystemAdapterChoice"
                        VerticalAlignment="Center"
                        Items="{Binding ViewModel.BannerViewModel.FileSystemAdapters, RelativeSource={RelativeSource AncestorType={x:Type uc:Page}}}"
                        SelectionChanged="FileSystemComboBox_SelectionChanged">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="vm:FileSystemAdapterItemViewModel">
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </uc:BannerControl.RightSide>
                <uc:BannerControl.AdditionalBottomContent>
                    <!--  File system InfoBar  -->
                    <ContentControl
                        x:Name="FileSystemInfoBarContainer"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Content="{Binding FileSystemInfoBar, RelativeSource={RelativeSource AncestorType={x:Type uc:Page}}}"
                        IsVisible="{Binding IsInfoBarOpen, RelativeSource={RelativeSource AncestorType={x:Type uc:Page}}, Mode=OneWay}"
                        Opacity="0">
                        <ContentControl.RenderTransform>
                            <TranslateTransform />
                        </ContentControl.RenderTransform>

                        <ContentControl.DataTemplates>
                            <ts:FileSystemInfoBarTemplateSelector
                                DokanyUnavailableInfoBarTemplate="{StaticResource DokanyUnavailableInfoBarTemplate}"
                                WebDavExperimentalInfoBarTemplate="{StaticResource GenericInfoBarTemplate}"
                                FuseExperimentalInfoBarTemplate="{StaticResource GenericInfoBarTemplate}" />
                        </ContentControl.DataTemplates>
                    </ContentControl>
                </uc:BannerControl.AdditionalBottomContent>
            </uc:BannerControl>

            <!--  Other settings  -->
            <StackPanel x:Name="OtherSettings" Grid.Row="2" Spacing="4">
                <StackPanel.RenderTransform>
                    <TranslateTransform />
                </StackPanel.RenderTransform>

                <ui:SettingsExpander
                    Header="Start with system"
                    Description="Launch SecureFolderFS on system startup"
                    IsEnabled="False"
                    IconSource="{ic:FluentIconSource ShareScreenStart48Regular}">
                    <ui:SettingsExpander.Footer>
                        <ToggleSwitch MinWidth="0" IsChecked="{Binding ViewModel.StartOnSystemStartup, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type uc:Page}}}" />
                    </ui:SettingsExpander.Footer>
                </ui:SettingsExpander>
                <ui:SettingsExpander
                    Header="Continue where you left off"
                    Description="Start on previously selected vault"
                    IconSource="{ic:FluentIconSource Power28Regular}">
                    <ui:SettingsExpander.Footer>
                        <ToggleSwitch MinWidth="0" IsChecked="{Binding ViewModel.ContinueOnLastVault, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type uc:Page}}}" />
                    </ui:SettingsExpander.Footer>
                </ui:SettingsExpander>
                <ui:SettingsExpander
                    Header="Open vault folder"
                    Description="Automatically open folder when vault is unlocked"
                    IconSource="{ic:FluentIconSource FolderOpen24Regular}">
                    <ui:SettingsExpander.Footer>
                        <ToggleSwitch MinWidth="0" IsChecked="{Binding ViewModel.OpenFolderOnUnlock, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type uc:Page}}}" />
                    </ui:SettingsExpander.Footer>
                </ui:SettingsExpander>
            </StackPanel>
        </Grid>
    </Border>
</uc:Page>
